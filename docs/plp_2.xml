<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE logtalk_entity SYSTEM "logtalk_entity.dtd">
<?xml-stylesheet type="text/xsl" href="logtalk_entity_to_xml.xsl"?>
<logtalk_entity>
<entity>
<name><![CDATA[plp(parser,file)]]></name>
<functor><![CDATA[plp/2]]></functor>
<file><![CDATA[plp_2]]></file>
<type>object</type>
<compilation>static, context_switching_calls</compilation>
<comment><![CDATA[An object that extracts an internal probabilistic logic program representation and a database from a parsed probabilistic logic program.]]></comment>
<parameters>
<parameter>
<name><![CDATA[parser]]></name>
<description><![CDATA[A parser implementing parserp.]]></description>
</parameter>
<parameter>
<name><![CDATA[file]]></name>
<description><![CDATA[A file descriptor (an atom) containing a probabilistic logic program to be parsed by the parser.]]></description>
</parameter>
</parameters>
</entity>
<relations>
<instantiates>
<name><![CDATA[plpc]]></name>
<functor><![CDATA[plpc/0]]></functor>
<scope>public</scope>
<file><![CDATA[plpc_0]]></file>
</instantiates>
<uses>
<name><![CDATA[entity_writer_util]]></name>
<functor><![CDATA[entity_writer_util/0]]></functor>
<file><![CDATA[entity_writer_util_0]]></file>
</uses>
<uses>
<name><![CDATA[list]]></name>
<functor><![CDATA[list/0]]></functor>
<file><![CDATA[list_0]]></file>
</uses>
<uses>
<name><![CDATA[os]]></name>
<functor><![CDATA[os/0]]></functor>
<file><![CDATA[os_0]]></file>
</uses>
<uses>
<name><![CDATA[reader]]></name>
<functor><![CDATA[reader/0]]></functor>
<file><![CDATA[reader_0]]></file>
</uses>
</relations>
<predicates>
<inherited>
<inherited_predicate>
<name><![CDATA[create_entity/1]]></name>
<from><![CDATA[writerp]]></from>
<functor><![CDATA[writerp/0]]></functor>
<file><![CDATA[writerp_0]]></file>
</inherited_predicate>
<inherited_predicate>
<name><![CDATA[probrule/3]]></name>
<from><![CDATA[plpp]]></from>
<functor><![CDATA[plpp/0]]></functor>
<file><![CDATA[plpp_0]]></file>
</inherited_predicate>
<inherited_predicate>
<name><![CDATA[write_entity/1]]></name>
<from><![CDATA[writerp]]></from>
<functor><![CDATA[writerp/0]]></functor>
<file><![CDATA[writerp_0]]></file>
</inherited_predicate>
</inherited>
<public>
<predicate>
<name><![CDATA[create_plp/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[create_plp]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Creates PLP (implementing plpp) as a dynamic object whose name matches the file name.]]></comment>
</predicate>
<predicate>
<name><![CDATA[write_plp/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[write_plp]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Writes PLP (implementing plpp) to a file whose name matches the file name.]]></comment>
</predicate>
<predicate>
<name><![CDATA[create_dbprotocol/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[create_dbprotocol]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Creates matching database protocol.]]></comment>
<remarks>
<remark>
<topic><![CDATA[explanation]]></topic>
<text><![CDATA[Creates a dynamic protocol to be implemented by the background knowledge bases for the PLP.]]></text>
</remark>
</remarks>
</predicate>
<predicate>
<name><![CDATA[write_dbprotocol/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[write_dbprotocol]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Writes matching database protocol to file.]]></comment>
<remarks>
<remark>
<topic><![CDATA[explanation]]></topic>
<text><![CDATA[Writes a dynamic protocol to be implemented by the background knowledge bases for the PLP. The file name is created by appending p to the file identifier.]]></text>
</remark>
</remarks>
</predicate>
<predicate>
<name><![CDATA[create_db/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[create_db]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Creates knowledge base (implementing matching DB protocol) as a dynamic object whose name appends _db to the file name.]]></comment>
</predicate>
<predicate>
<name><![CDATA[write_db/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[write_db]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Writes knowledge base (implementing matching DB protocol) to a file whose name appends _db to the file name.]]></comment>
</predicate>
<predicate>
<name><![CDATA[create_entities/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[create_entities]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Dynamically creates a PLP, a DB Protocol and a knowledge base.]]></comment>
<see_also>
<reference>
<name><![CDATA[create_plp/0]]></name>
<file><![CDATA[plp_2]]></file>
</reference>
<reference>
<name><![CDATA[create_dbprotocol/0]]></name>
<file><![CDATA[plp_2]]></file>
</reference>
<reference>
<name><![CDATA[create_db/0]]></name>
<file><![CDATA[plp_2]]></file>
</reference>
</see_also>
</predicate>
<predicate>
<name><![CDATA[write_entities/0]]></name>
<scope>public</scope>
<compilation>static</compilation>
<mode>
<template><![CDATA[write_entities]]></template>
<proofs>one</proofs>
</mode>
<comment><![CDATA[Writes  a PLP, a DB Protocol and a knowledge base to file.]]></comment>
<see_also>
<reference>
<name><![CDATA[write_plp/0]]></name>
<file><![CDATA[plp_2]]></file>
</reference>
<reference>
<name><![CDATA[write_dbprotocol/0]]></name>
<file><![CDATA[plp_2]]></file>
</reference>
<reference>
<name><![CDATA[write_db/0]]></name>
<file><![CDATA[plp_2]]></file>
</reference>
</see_also>
</predicate>
</public>
<protected>
<predicate>
<name><![CDATA[plp_from_file/2]]></name>
<scope>protected</scope>
<compilation>static</compilation>
</predicate>
</protected>
<private>
</private>
</predicates>
<operators>
</operators>
<remarks>
</remarks>
<see_also>
<reference>
<name><![CDATA[parserp]]></name>
<functor><![CDATA[parserp/0]]></functor>
<file><![CDATA[parserp_0]]></file>
</reference>
</see_also>
<availability>built_in</availability>
</logtalk_entity>
